{"version":3,"sources":["components/NumberTiles.js","components/Calculator.js","App.js","serviceWorker.js","index.js"],"names":["NumberTiles","props","entries","place","selectedNumbers","setSelectedNumbers","items","i","console","log","push","numberSelected","number","includes","className","map","item","onClick","filter","Calculator","useState","selectedAmount","setSelectedAmount","selectedType","setSelectedType","isBox","setIsBox","placeLabelCalc","singleRace","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","product","array","repeat","reduce","accumulator","value","tmp","forEach","a0","a1","concat","intersection","first","second","third","fourth","horse","length","options","label","placeholder","onChange","type","id","name","for","places","Exacta","Trifecta","Superfecta","DailyDouble","P3","P4","P5","P6","numberOfPlaces","multiplier","fifth","sixth","format","calculateBetCost","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.61afbd96.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nexport const NumberTiles = (props) => {\n    const { entries, place, selectedNumbers, setSelectedNumbers } = props\n\n    let items = [];\n    let i = 0;\n    console.log(entries)\n    console.log(place)\n    while (i < entries) {\n      i++;\n      items.push(i);\n      console.log(i)\n    }\n\n    const numberSelected = (number, place) => {\n        if (selectedNumbers && selectedNumbers[place] && selectedNumbers[place].includes(number)) {\n          return true;\n        } else {\n          return false;\n        }\n      };\n\n    return (\n        <div className=\"number-tiles\">\n            {items.map((item) => {\n              return (\n                <div\n                  className={`square-number ${\n                    numberSelected(item, place) ? \"is-selected\" : \"\"\n                  }`}\n                  onClick={() => {\n                    if (!numberSelected(item, place)) {\n                      setSelectedNumbers({\n                          ...selectedNumbers,\n                          [place]: [...(selectedNumbers[place] || []), item]\n                    });\n                    } else {\n                      setSelectedNumbers({\n                          ...selectedNumbers,\n                          [place]: selectedNumbers[place].filter((number) => number !== item)\n                      });\n                    }\n                  }}\n                >\n                  <p>{item}</p>\n                </div>\n              );\n            })}\n          </div>\n    )\n}","import \"./Calculator.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { NumberTiles } from './NumberTiles'\nimport Select from 'react-select'\n\n\n// const HorseRow = (number) => {\n//   const numberTiles = () => {\n//     let i = 0;\n//     while (i < number) {\n//       i++;\n//       return <div>{i}</div>;\n//     }\n//   };\n\n//   return <div>{numberTiles()}</div>;\n// };\n\nexport const Calculator = () => {\n  const [selectedNumbers, setSelectedNumbers] = useState({});\n  const [selectedAmount, setSelectedAmount] = useState(\"\");\n  const [selectedType, setSelectedType] = useState(\"\");\n  const [entries, setEntries] = useState(12);\n  const [isBox, setIsBox] = useState(false);\n\n  const numberOfPlaces = (entries) => {\n    const betTypes = {\n      Exacta: 2,\n      Trifecta: 3,\n      Superfecta: 4,\n      DailyDouble: 2,\n      P3: 3,\n      P4: 4,\n      P5: 5,\n      P6: 6,\n    }\n\n    const places = isBox ? 1 : betTypes[selectedType]\n\n    let items = [];\n    let i = 0;\n    while (i < places) {\n      i++;\n      items.push(i);\n    }\n\n      return (\n        <div className=\"places\">\n          {items.map((item) => (\n            <div className=\"place-container\">\n              <div>{placeLabelCalc(item)}</div>\n              <NumberTiles entries={entries} place={item} selectedNumbers={selectedNumbers} setSelectedNumbers={setSelectedNumbers} />\n            </div>\n          ))}\n        </div>\n      )\n  }\n\n  const placeLabelCalc = (number) => {\n    const singleRace = ['Exacta', 'Trifecta', 'Superfecta']\n    if (isBox) {\n      return 'All Places'\n    } else {\n      switch (number) {\n        case 1:\n          return singleRace.includes(selectedType) ? '1st Place' : '1st Race'\n        case 2:\n          return singleRace.includes(selectedType) ? '2nd Place' : '2nd Race'\n        case 3:\n          return singleRace.includes(selectedType) ? '3rd Place' : '3rd Race'\n        case 4:\n          return singleRace.includes(selectedType) ? '4th Place' : '4th Race'\n        case 5:\n          return singleRace.includes(selectedType) ? '5th Place' : '5th Race'\n        case 6:\n          return singleRace.includes(selectedType) ? '6th Place' : '6th Race'\n        default:\n          return null\n      }\n    }\n  }\n\n  const exactaCalc = (numbers) => {\n    const length = numbers.length;\n    if (!isBox && length === 2) {\n      return selectedAmount;\n    } else {\n      const multiplier = length * (length - 1);\n      console.log(\"amount   -->  \", selectedAmount);\n      console.log(\"multiplier   -->  \", multiplier);\n      return selectedAmount * multiplier;\n    }\n  };\n\n  const calculateBetCost = () => {\n    let multiplier = 1;\n    const first = selectedNumbers[1]\n    const second = selectedNumbers[2]\n    const third = selectedNumbers[3]\n    const fourth = selectedNumbers[4]\n    const fifth = selectedNumbers[5]\n    const sixth = selectedNumbers[6]\n    if (selectedType === \"Exacta\" && isBox && first) {\n      multiplier = product([first, first]).length\n    } else if (selectedType === 'Exacta' && first && second) {\n      console.log(intersection(first, second))\n      multiplier = product([first, second]).length\n    } else if (selectedType === 'Trifecta' && first && second && third) {\n      multiplier = product([first, second, third]).length\n    } else if (selectedType === 'Trifecta' && isBox && first) {\n      multiplier = product([first, first, first]).length\n    } else if (selectedType === 'Superfecta' && first && second && third && fourth) {\n      multiplier = product([first, second, third, fourth]).length\n    } else if (selectedType === 'Superfecta' && isBox && first) {\n      multiplier = product([first, first, first, first]).length\n    } else if (selectedType === 'P3' && first && second && third) {\n      multiplier = product([first, second, third], true).length\n    } else if (selectedType === 'P4' && first && second && third && fourth) {\n      multiplier = product([first, second, third, fourth], true).length\n    } else if (selectedType === 'P5' && first && second && third && fourth && fifth) {\n      multiplier = product([first, second, third, fourth, fifth], true).length\n    } else if (selectedType === 'P6' && first && second && third && fourth && fifth && sixth) {\n      multiplier = product([first, second, third, fourth, fifth, sixth], true).length\n    } else {\n      multiplier = 1;\n    }\n    return formatter.format(selectedAmount * multiplier);\n  };\n\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 2\n  })\n\nfunction product(array, repeat) {\n  return array.reduce(function tl (accumulator, value) {\n    var tmp = [];\n    accumulator.forEach(function (a0) {\n      value.forEach(function (a1) {\n        if (repeat === true) {\n          tmp.push(a0.concat(a1));\n        } else {\n          if (!a0.includes(a1)) tmp.push(a0.concat(a1));\n        }\n      });\n    });\n    return tmp;\n  }, [[]]);\n}\n\n  const intersection = (first, second, third, fourth) => {\n    if (!first || !second) return\n    if (!third && !fourth) {\n      return first.filter(horse => second.includes(horse)).length\n    } else if (!fourth) {\n      console.log(first.filter(horse => second.includes(horse)).filter(horse => third.includes(horse)))\n      return first.filter(horse => second.includes(horse)).filter(horse => third.includes(horse)).length\n    } else {\n      console.log('not ready')\n    }\n  }\n\n  const amountOptions = [\n    { value: 0.1, label: '$0.10' },\n    { value: 0.2, label: '$0.20' },\n    { value: 0.5, label: '$0.50' },\n    { value: 1, label: '$1' },\n    { value: 2, label: '$2' },\n    { value: 5, label: '$5' },\n    { value: 10, label: '$10' },\n    { value: 15, label: '$15' },\n    { value: 20, label: '$20' },\n    { value: 50, label: '$50' },\n    { value: 100, label: '$100' },\n  ]\n\n  const betOptions = [\n    { value: 'Exacta', label: 'Exacta' },\n    { value: 'Trifecta', label: 'Trifecta' },\n    { value: 'Superfecta', label: 'Superfecta' },\n    { value: 'DailyDouble', label: 'Daily Double' },\n    { value: 'P3', label: 'Pick 3' },\n    { value: 'P4', label: 'Pick 4' },\n    { value: 'P5', label: 'Pick 5' },\n    { value: 'P6', label: 'Pick 6' },\n  ]\n\n  const handleAmountChange = (value) => {\n    setSelectedAmount(value.value)\n  }\n\n  const handleTypeChange = (value) => {\n    setSelectedType(value.value)\n  }\n\n  return (\n    <>\n      <div className=\"container\">\n        {/* <div> */}\n          {/* <select\n            id=\"bet-amount\"\n            className=\"select\"\n            onChange={(e) => setSelectedAmount(e.target.value)}\n          >\n            <option value disabled=\"disabled\" selected=\"selected\" hidden>\n              Bet Amount\n            </option>\n            <option value={0.1}>$0.10</option>\n            <option value={0.2}>$0.20</option>\n            <option value={0.5}>$0.50</option>\n            <option value={1}>$1</option>\n            <option value={2}>$2</option>\n            <option value={5}>$5</option>\n            <option value={10}>$10</option>\n            <option value={15}>$15</option>\n            <option value={20}>$20</option>\n            <option value={50}>$50</option>\n            <option value={100}>$100</option>\n          </select> */}\n          <Select options={amountOptions} className=\"select\" placeholder=\"Bet Amount\" onChange={handleAmountChange}/>\n        {/* </div> */}\n        {/* <div className=\"select-options\">\n          <select\n            id=\"bet-type\"\n            className=\"select\"\n            onChange={(e) => setSelectedType(e.target.value)}\n          >\n            <option value disabled=\"disabled\" selected=\"selected\" hidden>\n              Bet Type\n            </option>\n            <option value=\"Exacta\">Exacta</option>\n            <option value=\"Trifecta\">Trifecta</option>\n            <option value=\"Superfecta\">Superfecta</option>\n            <option value=\"DailyDouble\">Daily Double</option>\n            <option value=\"P3\">Pick 3</option>\n            <option value=\"P4\">Pick 4</option>\n            <option value=\"P5\">Pick 5</option>\n            <option value=\"P6\">Pick 6</option>\n          </select>\n        </div> */}\n        <Select options={betOptions} className=\"select\" placeholder=\"Bet Type\" onChange={handleTypeChange}/>\n        <div className=\"checkbox\">\n          <input\n            type=\"checkbox\"\n            id=\"box\"\n            name=\"box\"\n            value=\"box\"\n            onChange={() => setIsBox(!isBox)}\n          />\n          <label for=\"box\">Box</label>\n        </div>\n      </div>\n\n      {numberOfPlaces(12)}\n\n      <div className=\"cost-display\">\n        <span>{`Bet Cost: ${calculateBetCost()}`}</span>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom'\nimport { Calculator } from './components/Calculator'\n\nfunction App() {\n  return (\n        <div className=\"HELLO\">\n       {/* <Switch> */}\n          <Route exact path=\"/\" component={Calculator} />\n       {/* </Switch> */}\n        </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    {/* <React.StrictMode> */}\n      <App />\n    {/* </React.StrictMode> */}\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}